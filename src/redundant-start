#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gomicro/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

execute "set kernel.sem values" do
  command 'sysctl -w kernel.sem="5010 641280 5010 1024"'
end

# Configure sshd
directory '/etc/service/ssh' do
  recursive true
end

directory '/etc/service/ssh/log' do
  recursive true
end

template '/etc/service/ssh/log/run' do
  mode 0755
  source 'log-run.erb'
  variables ({ svc: "ssh" })
end

template '/etc/service/ssh/run' do
  mode 0755
  source 'run-root.erb'
  variables ({ exec: "/opt/gomicro/sbin/sshd -D -e 2>&1" })
end

ensure_socket 'ssh' do
  port '(22)'
  action :listening
end

directory '/etc/service/db' do
  recursive true
end

directory '/etc/service/db/log' do
  recursive true
end

template '/etc/service/db/log/run' do
  mode 0755
  source 'log-run.erb'
  variables ({ svc: "db" })
end

# update start comand
template '/etc/service/db/run' do
  mode 0755
  variables ({ exec: "/data/bin/yoke /data/etc/yoke.ini 2>&1" })
end

service 'db' do
  action :enable
  only_if { File.exist?('/etc/service/db/run') }
end

# Wait for server to start
ensure_socket 'db' do
  port '4400'
  action :listening
end